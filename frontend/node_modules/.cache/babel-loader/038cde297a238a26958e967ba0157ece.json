{"ast":null,"code":"// LOGIN\nimport { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL } from \"./../Constants/UserConstants\";\nimport axios from \"axios\";\nexport const login = (email, password) => async dispatch => {\n  try {\n    console.log(\"running\");\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/users/login\", {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; // LOGOUT\n\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({\n    type: USER_LOGOUT\n  }); // document.location.href = \"/\"\n}; // REGISTER\n\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    console.log(name, email, password);\n    const {\n      data\n    } = await axios.post(\"/api/users\", {\n      name,\n      email,\n      password\n    }, config);\n    console.log(data);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; // GET PROFILE\n\nexport const profile = () => async dispatch => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/users/profile\", {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","axios","login","email","password","dispatch","console","log","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem","register","name","profile"],"sources":["C:/Users/Cody_/Documents/GitHub/project/ramseys-craft-store/frontend/src/Redux/Actions/UserActions.js"],"sourcesContent":["// LOGIN\r\nimport { \r\n    USER_LOGIN_REQUEST, \r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL, \r\n    USER_LOGOUT,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n} from \"./../Constants/UserConstants\";\r\nimport axios from \"axios\"\r\n\r\nexport const login = (email, password) => async(dispatch) => {\r\n    try {\r\n        console.log(\"running\");\r\n        dispatch({ type: USER_LOGIN_REQUEST })\r\n    \r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\" : \"application/json\",\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.post(\"/api/users/login\", { email, password }, config)\r\n\r\n        dispatch({ type: USER_LOGIN_SUCCESS, payload: data} )\r\n\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message \r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        }) \r\n    }\r\n}\r\n\r\n// LOGOUT\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem(\"userInfo\")\r\n    dispatch({ type: USER_LOGOUT})\r\n    // document.location.href = \"/\"\r\n}\r\n\r\n// REGISTER\r\nexport const register = (name, email, password) => async(dispatch) => {\r\n    try {\r\n        dispatch({ type: USER_REGISTER_REQUEST })\r\n    \r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\" : \"application/json\",\r\n            },\r\n        }\r\n        console.log(name, email, password)\r\n        const { data } = await axios.post(\"/api/users\", { name, email, password }, config)\r\n        console.log(data);\r\n        dispatch({ type: USER_REGISTER_SUCCESS, payload: data} )\r\n        dispatch({ type: USER_LOGIN_SUCCESS, payload: data} )\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message \r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        }) \r\n    }\r\n}\r\n\r\n\r\n// GET PROFILE\r\nexport const profile = () => async(dispatch) => {\r\n    try {\r\n        dispatch({ type: USER_DETAILS_REQUEST })\r\n    \r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\" : \"application/json\",\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.post(\"/api/users/profile\", { email, password }, config)\r\n\r\n        dispatch({ type: USER_LOGIN_SUCCESS, payload: data} )\r\n\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message \r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        }) \r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}