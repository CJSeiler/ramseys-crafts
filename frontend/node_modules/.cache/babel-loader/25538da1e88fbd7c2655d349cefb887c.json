{"ast":null,"code":"import { CART_ADD_ITEM, CART_REMOVE_ITEM, UPDATE_CART_QTY // EMPTY_CART\n} from \"../Constants/cartConstants\"; // ADD PRODUCT TO CART\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  const response = await fetch(`/api/products/${id}`, {\n    method: \"GET\"\n  });\n  const data = await response.json();\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty\n    }\n  });\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n}; // REMOVE PRODUCT FROM CART\n\nexport const removeFromCart = id => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id\n  });\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n};\nexport const updateCartQuantity = (id, qty) => async (dispatch, getState) => {\n  const response = await fetch(`/api/products/${id}`, {\n    method: \"GET\"\n  });\n  const data = await response.json();\n  dispatch({\n    type: UPDATE_CART_QTY,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty\n    }\n  });\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n}; // export const emptyCart = () => dispatch => {\n//     dispatch({\n//         type: EMPTY_CART,\n//         payload: {}\n//     })\n//     localStorage.setItem(\"cartItems\", JSON.stringify([]))\n// }","map":{"version":3,"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","UPDATE_CART_QTY","addToCart","id","qty","dispatch","getState","response","fetch","method","data","json","type","payload","product","_id","name","image","price","countInStock","localStorage","setItem","JSON","stringify","cart","cartItems","removeFromCart","updateCartQuantity"],"sources":["C:/Users/Cody_/Documents/GitHub/project/ramseys-craft-store/frontend/src/Redux/Actions/CartActions.js"],"sourcesContent":["import { \r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    UPDATE_CART_QTY,\r\n    // EMPTY_CART\r\n} from \"../Constants/cartConstants\"\r\n\r\n// ADD PRODUCT TO CART\r\nexport const addToCart = (id, qty) => async(dispatch, getState) => {\r\n    const response = await fetch(`/api/products/${id}`, { method: \"GET\" })\r\n    const data = await response.json()\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty,\r\n        }\r\n    })\r\n\r\n    localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n// REMOVE PRODUCT FROM CART\r\nexport const removeFromCart = id => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id\r\n    })\r\n\r\n    localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const updateCartQuantity = (id, qty) => async(dispatch, getState) => {\r\n    const response = await fetch(`/api/products/${id}`, { method: \"GET\" })\r\n    const data = await response.json()\r\n\r\n    dispatch({\r\n        type: UPDATE_CART_QTY,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty,\r\n        }\r\n    })\r\n\r\n    localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n// export const emptyCart = () => dispatch => {\r\n//     dispatch({\r\n//         type: EMPTY_CART,\r\n//         payload: {}\r\n//     })\r\n\r\n//     localStorage.setItem(\"cartItems\", JSON.stringify([]))\r\n// }"],"mappings":"AAAA,SACIA,aADJ,EAEIC,gBAFJ,EAGIC,eAHJ,CAII;AAJJ,OAKO,4BALP,C,CAOA;;AACA,OAAO,MAAMC,SAAS,GAAG,CAACC,EAAD,EAAKC,GAAL,KAAa,OAAMC,QAAN,EAAgBC,QAAhB,KAA6B;EAC/D,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,iBAAgBL,EAAG,EAArB,EAAwB;IAAEM,MAAM,EAAE;EAAV,CAAxB,CAA5B;EACA,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAnB;EAEAN,QAAQ,CAAC;IACLO,IAAI,EAAEb,aADD;IAELc,OAAO,EAAE;MACLC,OAAO,EAAEJ,IAAI,CAACK,GADT;MAELC,IAAI,EAAEN,IAAI,CAACM,IAFN;MAGLC,KAAK,EAAEP,IAAI,CAACO,KAHP;MAILC,KAAK,EAAER,IAAI,CAACQ,KAJP;MAKLC,YAAY,EAAET,IAAI,CAACS,YALd;MAMLf;IANK;EAFJ,CAAD,CAAR;EAYAgB,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAejB,QAAQ,GAAGkB,IAAX,CAAgBC,SAA/B,CAAlC;AACH,CAjBM,C,CAmBP;;AACA,OAAO,MAAMC,cAAc,GAAGvB,EAAE,IAAI,CAACE,QAAD,EAAWC,QAAX,KAAwB;EACxDD,QAAQ,CAAC;IACLO,IAAI,EAAEZ,gBADD;IAELa,OAAO,EAAEV;EAFJ,CAAD,CAAR;EAKAiB,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAejB,QAAQ,GAAGkB,IAAX,CAAgBC,SAA/B,CAAlC;AACH,CAPM;AASP,OAAO,MAAME,kBAAkB,GAAG,CAACxB,EAAD,EAAKC,GAAL,KAAa,OAAMC,QAAN,EAAgBC,QAAhB,KAA6B;EACxE,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,iBAAgBL,EAAG,EAArB,EAAwB;IAAEM,MAAM,EAAE;EAAV,CAAxB,CAA5B;EACA,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAnB;EAEAN,QAAQ,CAAC;IACLO,IAAI,EAAEX,eADD;IAELY,OAAO,EAAE;MACLC,OAAO,EAAEJ,IAAI,CAACK,GADT;MAELC,IAAI,EAAEN,IAAI,CAACM,IAFN;MAGLC,KAAK,EAAEP,IAAI,CAACO,KAHP;MAILC,KAAK,EAAER,IAAI,CAACQ,KAJP;MAKLC,YAAY,EAAET,IAAI,CAACS,YALd;MAMLf;IANK;EAFJ,CAAD,CAAR;EAYAgB,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAejB,QAAQ,GAAGkB,IAAX,CAAgBC,SAA/B,CAAlC;AACH,CAjBM,C,CAmBP;AACA;AACA;AACA;AACA;AAEA;AACA"},"metadata":{},"sourceType":"module"}