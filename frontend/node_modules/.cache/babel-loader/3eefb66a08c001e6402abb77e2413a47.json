{"ast":null,"code":"import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD, CART_UPDATE_QTY, CART_SAVE_GUEST_INFO } from './../Constants/CartConstants';\nexport const cartReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    cartItems: [],\n    shippingAddress: {},\n    guestInfo: {}\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let item, existItem;\n\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      item = action.payload;\n      existItem = state.cartItems.find(x => x.product === item.product);\n\n      if (existItem) {\n        return { ...state,\n          cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    case CART_REMOVE_ITEM:\n      return { ...state,\n        cartItems: state.cartItems.filter(item => item.product !== action.payload)\n      };\n\n    case CART_UPDATE_QTY:\n      item = action.payload;\n      existItem = state.cartItems.find(x => x.product === item.product);\n\n      if (existItem) {\n        return { ...state,\n          cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    case CART_SAVE_SHIPPING_ADDRESS:\n      return { ...state,\n        shippingAddress: action.payload\n      };\n\n    case CART_SAVE_PAYMENT_METHOD:\n      return { ...state,\n        paymentMethod: action.payload\n      };\n\n    case CART_SAVE_GUEST_INFO:\n      return { ...state,\n        guestInfo: action.payload\n      };\n\n    default:\n      return { ...state,\n        // must be defined here instead of initial state or items will show up empty\n        cartItems: JSON.parse(localStorage.getItem(\"cartItems\")) || [],\n        shippingAddress: JSON.parse(localStorage.getItem(\"shippingAddress\")) || {},\n        guestInfo: JSON.parse(localStorage.getItem(\"guestInfo\")) || null\n      };\n  }\n};","map":{"version":3,"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_UPDATE_QTY","CART_SAVE_GUEST_INFO","cartReducer","state","cartItems","shippingAddress","guestInfo","action","item","existItem","type","payload","find","x","product","map","filter","paymentMethod","JSON","parse","localStorage","getItem"],"sources":["C:/Users/Cody_/Documents/GitHub/project/ramseys-craft-store/frontend/src/Redux/Reducers/CartReducers.js"],"sourcesContent":["import { \r\n    CART_ADD_ITEM, \r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n    CART_UPDATE_QTY,\r\n    CART_SAVE_GUEST_INFO,\r\n} from './../Constants/CartConstants';\r\n\r\nexport const cartReducer = (state = { cartItems:[], shippingAddress: {}, guestInfo: {},}, action) => {\r\n    let item, existItem\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            item = action.payload\r\n            existItem = state.cartItems.find(x => x.product === item.product)\r\n        \r\n            if(existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\r\n                } \r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(item => item.product !== action.payload)\r\n            }\r\n\r\n        case CART_UPDATE_QTY:\r\n            item = action.payload\r\n            existItem = state.cartItems.find(x => x.product === item.product)\r\n            if(existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\r\n                } \r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload,\r\n            }\r\n        \r\n        case CART_SAVE_GUEST_INFO:\r\n            return {\r\n                ...state,\r\n                guestInfo: action.payload,\r\n            }\r\n            \r\n        default:\r\n            return {\r\n                ...state,\r\n                // must be defined here instead of initial state or items will show up empty\r\n                cartItems: JSON.parse(localStorage.getItem(\"cartItems\")) || [],\r\n                shippingAddress: JSON.parse(localStorage.getItem(\"shippingAddress\")) || {},\r\n                guestInfo: JSON.parse(localStorage.getItem(\"guestInfo\")) || null,\r\n            }\r\n    }\r\n}"],"mappings":"AAAA,SACIA,aADJ,EAEIC,gBAFJ,EAGIC,0BAHJ,EAIIC,wBAJJ,EAKIC,eALJ,EAMIC,oBANJ,QAOO,8BAPP;AASA,OAAO,MAAMC,WAAW,GAAG,YAA0E;EAAA,IAAzEC,KAAyE,uEAAjE;IAAEC,SAAS,EAAC,EAAZ;IAAgBC,eAAe,EAAE,EAAjC;IAAqCC,SAAS,EAAE;EAAhD,CAAiE;EAAA,IAAXC,MAAW;EACjG,IAAIC,IAAJ,EAAUC,SAAV;;EACA,QAAQF,MAAM,CAACG,IAAf;IACI,KAAKd,aAAL;MACIY,IAAI,GAAGD,MAAM,CAACI,OAAd;MACAF,SAAS,GAAGN,KAAK,CAACC,SAAN,CAAgBQ,IAAhB,CAAqBC,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcN,IAAI,CAACM,OAA7C,CAAZ;;MAEA,IAAGL,SAAH,EAAc;QACV,OAAO,EACH,GAAGN,KADA;UAEHC,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBW,GAAhB,CAAoBF,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcL,SAAS,CAACK,OAAxB,GAAkCN,IAAlC,GAAyCK,CAAlE;QAFR,CAAP;MAIH,CALD,MAKO;QACH,OAAO,EACH,GAAGV,KADA;UAEHC,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBI,IAArB;QAFR,CAAP;MAIH;;IAEL,KAAKX,gBAAL;MACI,OAAO,EACH,GAAGM,KADA;QAEHC,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBY,MAAhB,CAAuBR,IAAI,IAAIA,IAAI,CAACM,OAAL,KAAiBP,MAAM,CAACI,OAAvD;MAFR,CAAP;;IAKJ,KAAKX,eAAL;MACIQ,IAAI,GAAGD,MAAM,CAACI,OAAd;MACAF,SAAS,GAAGN,KAAK,CAACC,SAAN,CAAgBQ,IAAhB,CAAqBC,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcN,IAAI,CAACM,OAA7C,CAAZ;;MACA,IAAGL,SAAH,EAAc;QACV,OAAO,EACH,GAAGN,KADA;UAEHC,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBW,GAAhB,CAAoBF,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcL,SAAS,CAACK,OAAxB,GAAkCN,IAAlC,GAAyCK,CAAlE;QAFR,CAAP;MAIH,CALD,MAKO;QACH,OAAO,EACH,GAAGV,KADA;UAEHC,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBI,IAArB;QAFR,CAAP;MAIH;;IAEL,KAAKV,0BAAL;MACI,OAAO,EACH,GAAGK,KADA;QAEHE,eAAe,EAAEE,MAAM,CAACI;MAFrB,CAAP;;IAKJ,KAAKZ,wBAAL;MACI,OAAO,EACH,GAAGI,KADA;QAEHc,aAAa,EAAEV,MAAM,CAACI;MAFnB,CAAP;;IAKJ,KAAKV,oBAAL;MACI,OAAO,EACH,GAAGE,KADA;QAEHG,SAAS,EAAEC,MAAM,CAACI;MAFf,CAAP;;IAKJ;MACI,OAAO,EACH,GAAGR,KADA;QAEH;QACAC,SAAS,EAAEc,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,KAAiD,EAHzD;QAIHhB,eAAe,EAAEa,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,KAAuD,EAJrE;QAKHf,SAAS,EAAEY,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,KAAiD;MALzD,CAAP;EAzDR;AAiEH,CAnEM"},"metadata":{},"sourceType":"module"}