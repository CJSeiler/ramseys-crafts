{"ast":null,"code":"// LOGIN\nimport { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_RESET, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL } from \"./../Constants/UserConstants\";\nimport axios from \"axios\";\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/users/login\", {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; // LOGOUT\n\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({\n    type: USER_LOGOUT\n  });\n  dispatch({\n    type: USER_DETAILS_RESET\n  }); // document.location.href = \"/\"\n}; // REGISTER\n\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/users\", {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; // USER DETAILS\n\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message; // \"Not authorized, token failed\" is the error message generated from protect middleware function\n\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n}; // UPDATE PROFILE\n\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(\"/api/users/profile\", user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","axios","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem","register","name","getUserDetails","id","getState","userLogin","userInfo","Authorization","token","get","updateUserProfile","user","put"],"sources":["C:/Users/Cody_/Documents/GitHub/project/ramseys-craft-store/frontend/src/Redux/Actions/UserActions.js"],"sourcesContent":["// LOGIN\r\nimport { \r\n    USER_LOGIN_REQUEST, \r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL, \r\n    USER_LOGOUT,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n} from \"./../Constants/UserConstants\";\r\nimport axios from \"axios\"\r\n\r\nexport const login = (email, password) => async(dispatch) => {\r\n    try {\r\n        dispatch({ type: USER_LOGIN_REQUEST })\r\n    \r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\" : \"application/json\",\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.post(\"/api/users/login\", { email, password }, config)\r\n\r\n        dispatch({ type: USER_LOGIN_SUCCESS, payload: data} )\r\n\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message \r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        }) \r\n    }\r\n}\r\n\r\n// LOGOUT\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem(\"userInfo\")\r\n    dispatch({ type: USER_LOGOUT})\r\n    dispatch({ type: USER_DETAILS_RESET})\r\n    // document.location.href = \"/\"\r\n}\r\n\r\n// REGISTER\r\nexport const register = (name, email, password) => async(dispatch) => {\r\n    try {\r\n        dispatch({ type: USER_REGISTER_REQUEST })\r\n    \r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\" : \"application/json\",\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.post(\"/api/users\", { name, email, password }, config)\r\n\r\n        dispatch({ type: USER_REGISTER_SUCCESS, payload: data} )\r\n        dispatch({ type: USER_LOGIN_SUCCESS, payload: data} )\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message \r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        }) \r\n    }\r\n}\r\n\r\n\r\n// USER DETAILS\r\nexport const getUserDetails = (id) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: USER_DETAILS_REQUEST })\r\n        const { userLogin: { userInfo } } = getState()\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/users/${id}`, config)\r\n\r\n        dispatch({ type: USER_DETAILS_SUCCESS, payload: data} )\r\n    } catch (error) {\r\n        const message = \r\n            error.response && error.response.data.message \r\n            ? error.response.data.message\r\n            : error.message\r\n        \r\n            // \"Not authorized, token failed\" is the error message generated from protect middleware function\r\n            if (message === \"Not authorized, token failed\") {\r\n                dispatch(logout())\r\n            }\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: message,\r\n        }) \r\n    }\r\n}\r\n\r\n// UPDATE PROFILE\r\n\r\nexport const updateUserProfile = (user) => async(dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: USER_UPDATE_PROFILE_REQUEST })\r\n    \r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\" : \"application/json\",\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(\"/api/users/profile\", user , config)\r\n\r\n        dispatch({ type: USER_UPDATE_PROFILE_SUCCESS, payload: data})\r\n        dispatch({ type: USER_LOGIN_SUCCESS, payload: data })\r\n\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(data))\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n\r\n        if (message === \"Not authorized, token failed\") {\r\n            dispatch(logout());\r\n            }\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: message\r\n        }) \r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}