{"ast":null,"code":"import { CART_ADD_ITEM, CART_REMOVE_ITEM, UPDATE_CART_QTY, EMPTY_CART } from './../Constants/cartConstants';\nexport const cartReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    cartItems: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let item, existItem;\n\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      item = action.payload;\n      existItem = state.cartItems.find(x => x.product === item.product);\n\n      if (existItem) {\n        return { ...state,\n          cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    case CART_REMOVE_ITEM:\n      return { ...state,\n        cartItems: state.cartItems.filter(item => item.product !== action.payload)\n      };\n\n    case UPDATE_CART_QTY:\n      item = action.payload;\n      existItem = state.cartItems.find(x => x.product === item.product);\n\n      if (existItem) {\n        return { ...state,\n          cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    case EMPTY_CART:\n      return { ...state,\n        cartItems: []\n      };\n\n    default:\n      return { ...state,\n        cartItems: JSON.parse(localStorage.getItem(\"cartItems\")) || []\n      };\n  }\n};","map":{"version":3,"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","UPDATE_CART_QTY","EMPTY_CART","cartReducer","state","cartItems","action","item","existItem","type","payload","find","x","product","map","filter","JSON","parse","localStorage","getItem"],"sources":["C:/Users/Cody_/Documents/GitHub/project/ramseys-craft-store/frontend/src/Redux/Reducers/CartReducers.js"],"sourcesContent":["import { \r\n    CART_ADD_ITEM, \r\n    CART_REMOVE_ITEM,\r\n    UPDATE_CART_QTY,\r\n    EMPTY_CART \r\n} from './../Constants/cartConstants';\r\n\r\nexport const cartReducer = (state = {cartItems:[]}, action) => {\r\n    let item, existItem\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            item = action.payload\r\n            existItem = state.cartItems.find(x => x.product === item.product)\r\n        \r\n            if(existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\r\n                } \r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(item => item.product !== action.payload)\r\n            }\r\n        case UPDATE_CART_QTY:\r\n            item = action.payload\r\n            existItem = state.cartItems.find(x => x.product === item.product)\r\n            if(existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\r\n                } \r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n        case EMPTY_CART:\r\n            return {\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n        default:\r\n            return {\r\n                ...state,\r\n                cartItems: JSON.parse(localStorage.getItem(\"cartItems\")) || []\r\n            }\r\n    }\r\n}"],"mappings":"AAAA,SACIA,aADJ,EAEIC,gBAFJ,EAGIC,eAHJ,EAIIC,UAJJ,QAKO,8BALP;AAOA,OAAO,MAAMC,WAAW,GAAG,YAAoC;EAAA,IAAnCC,KAAmC,uEAA3B;IAACC,SAAS,EAAC;EAAX,CAA2B;EAAA,IAAXC,MAAW;EAC3D,IAAIC,IAAJ,EAAUC,SAAV;;EACA,QAAQF,MAAM,CAACG,IAAf;IACI,KAAKV,aAAL;MACIQ,IAAI,GAAGD,MAAM,CAACI,OAAd;MACAF,SAAS,GAAGJ,KAAK,CAACC,SAAN,CAAgBM,IAAhB,CAAqBC,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcN,IAAI,CAACM,OAA7C,CAAZ;;MAEA,IAAGL,SAAH,EAAc;QACV,OAAO,EACH,GAAGJ,KADA;UAEHC,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBS,GAAhB,CAAoBF,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcL,SAAS,CAACK,OAAxB,GAAkCN,IAAlC,GAAyCK,CAAlE;QAFR,CAAP;MAIH,CALD,MAKO;QACH,OAAO,EACH,GAAGR,KADA;UAEHC,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBE,IAArB;QAFR,CAAP;MAIH;;IACL,KAAKP,gBAAL;MACI,OAAO,EACH,GAAGI,KADA;QAEHC,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBU,MAAhB,CAAuBR,IAAI,IAAIA,IAAI,CAACM,OAAL,KAAiBP,MAAM,CAACI,OAAvD;MAFR,CAAP;;IAIJ,KAAKT,eAAL;MACIM,IAAI,GAAGD,MAAM,CAACI,OAAd;MACAF,SAAS,GAAGJ,KAAK,CAACC,SAAN,CAAgBM,IAAhB,CAAqBC,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcN,IAAI,CAACM,OAA7C,CAAZ;;MACA,IAAGL,SAAH,EAAc;QACV,OAAO,EACH,GAAGJ,KADA;UAEHC,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBS,GAAhB,CAAoBF,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcL,SAAS,CAACK,OAAxB,GAAkCN,IAAlC,GAAyCK,CAAlE;QAFR,CAAP;MAIH,CALD,MAKO;QACH,OAAO,EACH,GAAGR,KADA;UAEHC,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBE,IAArB;QAFR,CAAP;MAIH;;IACL,KAAKL,UAAL;MACI,OAAO,EACH,GAAGE,KADA;QAEHC,SAAS,EAAE;MAFR,CAAP;;IAIJ;MACI,OAAO,EACH,GAAGD,KADA;QAEHC,SAAS,EAAEW,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,KAAiD;MAFzD,CAAP;EAzCR;AA8CH,CAhDM"},"metadata":{},"sourceType":"module"}